import numpy as np

class BigMatrixMath:
	def __init__(self):
		self.list =[]
	def addMatrix(self, arr = None):
		if arr is None:
			newList = np.random.randint(low = -70, high = 159, size = (40, 40))
			self.list.append(newList)
		else:
				self.list.append(arr)
	def printDimension(self):
		for i in self.list:
			print(i.shape)
	def dotProductEligible(self, arr1, arr2):
		if self.list[arr1].shape[0] == self.list[arr2].shape[1]:
			print("Dot product is eligible.")
		else:
			print("Dot product is not eligible.")
			return

matrix = BigMatrixMath()
matrix.addMatrix()
matrix.printDimension()


spacedNumbers = np.linspace(0, 100, 25)

a = np.array([[56, 12], [39, 74]])
b = np.array([[65, 76]])
c = np.concatenate((a, b), axis = 0)

d = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])
e = d.reshape((3,4))
